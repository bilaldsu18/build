{"version":3,"sources":["E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.component.css","E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.component.html","E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.component.ts","E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.module.ts","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/index.js","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/currency-mask.config.js","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/currency-mask.directive.js","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/currency-mask.module.js","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/input.handler.js","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/input.manager.js","E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/input.service.js"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,q5LAAq5L,SAAS,srBAAsrB,iDAAiD,8wBAA8wB,gDAAgD,0XAA0X,gDAAgD,+XAA+X,kDAAkD,mYAAmY,gDAAgD,iXAAiX,gDAAgD,2I;;;;;;;;;;;;;;;;;;;ACAhkS;AAClD,6BAA6B;AAO7B;IAQE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IAXU,gBAAgB;QAL5B,gEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,8GAAuC;YACvC,6GAAsC;SACvC,CAAC;;OACW,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACM;AACQ;AACF;AACS;AACT;AACV;AAEpC,IAAM,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAgB;QAC3B,IAAI,EAAE;YACJ,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,kCAAkC;YACxC,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAYF;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAVzB,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,qEAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;gBACpC,2EAAY;gBACZ,2DAAW;gBACX,qEAAkB;aACnB;YACD,YAAY,EAAE,CAAC,4EAAgB,CAAC;SACjC,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;AC9B1B;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,iC;;;;;;;;ACPA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,gD;;;;;;;;ACJA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,8BAA8B,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,oDAAoD;AACpD,KAAK,gCAAgC,wBAAwB,GAAG,4EAA4E,IAAI;AAChJ,KAAK,2BAA2B;AAChC,KAAK,gCAAgC;AACrC,EAAE;AACF;AACA,iBAAiB,qBAAqB;AACtC,oBAAoB,yDAAyD;AAC7E,mBAAmB,wDAAwD;AAC3E,qBAAqB,0DAA0D;AAC/E,uBAAuB,4DAA4D;AACnF,wBAAwB,6DAA6D;AACrF,qBAAqB,0DAA0D;AAC/E;AACA;AACA,mD;;;;;;;;AC/GA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,gD;;;;;;;;AC5BA;AACA,8CAA8C,cAAcyC;;;;;;;;ACxHA;AACA,8CAA8C,cAAcyC;;;;;;;;ACrGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH,EAAE;AACvyC","file":"masking.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.component.css\n// module id = ../../../../../src/app/pages/ui-elements/forms/masking/masking.component.css\n// module chunks = masking.module","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-xl-6\\\">\\r\\n    <!-- Date card start -->\\r\\n    <app-card [title]=\\\"'Date'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\">\\r\\n      <p class=\\\"m-b-15\\\">Add class of <code>.date</code> with <code>data-mask</code> attribute</p>\\r\\n      <form>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Insert Date 1</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" specialCharacters=\\\"false\\\" class=\\\"form-control date\\\" placeholder=\\\"__/__/____\\\" mask='00/00/0000'>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Insert Date 2</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control date2\\\" placeholder=\\\"__-__-____\\\" specialCharacters=\\\"false\\\" mask=\\\"00-00-0000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Date card end -->\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12 col-xl-6\\\">\\r\\n    <!-- Time card start -->\\r\\n    <app-card [title]=\\\"'Time'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\">\\r\\n      <p class=\\\"m-b-15\\\">Add class of <code>.hour</code> with <code>data-mask</code> attribute</p>\\r\\n      <form>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Hour</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control hour\\\" placeholder=\\\"__:__:__\\\" mask=\\\"00:00:00\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Date & Hour</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control dateHour\\\" placeholder=\\\"__/__/____ __:__:__\\\" mask=\\\"00/00/00 00:00:00\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Time card end -->\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-xl-6\\\">\\r\\n    <!-- Phone no card start -->\\r\\n    <app-card [title]=\\\"'Phone no.'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\">\\r\\n      <p class=\\\"m-b-15\\\">Add class of <code>.mob_no</code> with <code>data-mask</code> attribute</p>\\r\\n      <form>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Mobile No.</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control mob_no\\\" placeholder=\\\"____-___-___\\\"  specialCharacters=\\\"false\\\"  mask=\\\"0000-000-000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Telephone</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control phone\\\" placeholder=\\\"____-____\\\"  specialCharacters=\\\"false\\\" mask=\\\"0000-0000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Tel. with Code Area</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control telphone_with_code\\\" placeholder=\\\"(__) ____-____\\\" mask=\\\"(00) 0000-0000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">US Telephone</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control us_telephone\\\" placeholder=\\\"(___) ___-____\\\" mask=\\\"(000) 000-0000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Phone no card end -->\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12 col-xl-6\\\">\\r\\n    <!-- Network card start -->\\r\\n    <app-card [title]=\\\"'Network'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\">\\r\\n      <p class=\\\"m-b-15\\\">Add class of <code>.ip</code> with <code>data-mask</code> attribute</p>\\r\\n      <form>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">IP Address</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control ip\\\" placeholder=\\\"___.___.___.___\\\" mask=\\\"000.000.000.000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">IPV4</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control ipv4\\\" placeholder=\\\"___.___.___.____\\\" mask=\\\"00/00/0000 00:00:00\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">IPV6</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control ipv6\\\" placeholder=\\\"____:____:____:_:___:____:____:____\\\" mask=\\\"0000:0000:0000:0:000:0000:0000:0000\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Network card end -->\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-xl-6\\\">\\r\\n    <!-- Numbers card start -->\\r\\n    <app-card [title]=\\\"'Numbers'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\">\\r\\n      <p class=\\\"m-b-15\\\">Add class of <code>.autonumber</code> with <code>&lt;input&gt;</code> tag</p>\\r\\n      <form>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Default</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control autonumber\\\" >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Auto Numeric (%)</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control autonumber\\\" name=\\\"autonumeric\\\" currencyMask  [(ngModel)]=\\\"value5\\\" [options]=\\\"{ prefix: '% ', align: 'right', allowZero: false }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Numbers card end -->\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12 col-xl-6\\\">\\r\\n    <!-- Currency card start -->\\r\\n    <app-card [title]=\\\"'Currency'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\">\\r\\n      <p class=\\\"m-b-15\\\">Add class of <code>.autonumber</code> with <code>data-a-*</code> attribute</p>\\r\\n      <form>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Dollar ($)</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control autonumber\\\" name=\\\"dollar\\\" currencyMask  [(ngModel)]=\\\"value\\\" [options]=\\\"{ prefix: '$ ', align: 'left', allowZero: false }\\\" >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Euro (€)</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control autonumber\\\" name=\\\"Euro\\\" currencyMask [(ngModel)]=\\\"value1\\\" [options]=\\\"{ prefix: '€ ', align: 'left', allowZero: false }\\\" >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Rupee (Rs.)</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"Rupee\\\" class=\\\"form-control autonumber\\\"  currencyMask [(ngModel)]=\\\"value2\\\" [options]=\\\"{ prefix: 'Rs. ', align: 'left', allowZero: false }\\\" >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Renminbi (¥)</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control autonumber\\\" name=\\\"renminbi\\\"  currencyMask [(ngModel)]=\\\"value3\\\" [options]=\\\"{ prefix: '¥ ', align: 'left', allowZero: false }\\\" >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label class=\\\"col-form-label\\\">Pound (£)</label>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control autonumber\\\" name=\\\"pound\\\" currencyMask [(ngModel)]=\\\"value4\\\" [options]=\\\"{ prefix: '£ ', align: 'left', allowZero: false }\\\" >\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Currency card end -->\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.component.html\n// module id = ../../../../../src/app/pages/ui-elements/forms/masking/masking.component.html\n// module chunks = masking.module","import { Component, OnInit } from '@angular/core';\r\n/*import '../../../../../';*/\r\n\r\n@Component({\r\n  selector: 'app-masking',\r\n  templateUrl: './masking.component.html',\r\n  styleUrls: ['./masking.component.css']\r\n})\r\nexport class MaskingComponent implements OnInit {\r\n  public value: string;\r\n  public value1: string;\r\n  public value2: string;\r\n  public value3: string;\r\n  public value4: string;\r\n  public value5: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaskingComponent } from './masking.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport {CurrencyMaskModule} from 'ng2-currency-mask';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nexport const maskingRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MaskingComponent,\r\n    data: {\r\n      breadcrumb: 'Form Masking',\r\n      icon: 'icofont-file-alt bg-c-lite-green',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(maskingRoutes),\r\n    SharedModule,\r\n    FormsModule,\r\n    CurrencyMaskModule\r\n  ],\r\n  declarations: [MaskingComponent]\r\n})\r\nexport class MaskingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/angular/4 feb till customer/angularconected/src/app/pages/ui-elements/forms/masking/masking.module.ts","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./src/currency-mask.directive\"));\r\n__export(require(\"./src/currency-mask.module\"));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/index.js\n// module id = ../../../../ng2-currency-mask/index.js\n// module chunks = masking.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nexports.CURRENCY_MASK_CONFIG = new core_1.InjectionToken(\"currency.mask.config\");\r\n//# sourceMappingURL=currency-mask.config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/currency-mask.config.js\n// module id = ../../../../ng2-currency-mask/src/currency-mask.config.js\n// module chunks = masking.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar currency_mask_config_1 = require(\"./currency-mask.config\");\r\nvar input_handler_1 = require(\"./input.handler\");\r\nexports.CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return CurrencyMaskDirective; }),\r\n    multi: true\r\n};\r\nvar CurrencyMaskDirective = (function () {\r\n    function CurrencyMaskDirective(currencyMaskConfig, elementRef, keyValueDiffers) {\r\n        this.currencyMaskConfig = currencyMaskConfig;\r\n        this.elementRef = elementRef;\r\n        this.keyValueDiffers = keyValueDiffers;\r\n        this.options = {};\r\n        this.optionsTemplate = {\r\n            align: \"right\",\r\n            allowNegative: true,\r\n            allowZero: true,\r\n            decimal: \".\",\r\n            precision: 2,\r\n            prefix: \"$ \",\r\n            suffix: \"\",\r\n            thousands: \",\"\r\n        };\r\n        if (currencyMaskConfig) {\r\n            this.optionsTemplate = currencyMaskConfig;\r\n        }\r\n        this.keyValueDiffer = keyValueDiffers.find({}).create(null);\r\n    }\r\n    CurrencyMaskDirective.prototype.ngAfterViewInit = function () {\r\n        this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\r\n    };\r\n    CurrencyMaskDirective.prototype.ngDoCheck = function () {\r\n        if (this.keyValueDiffer.diff(this.options)) {\r\n            this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\r\n            this.inputHandler.updateOptions(Object.assign({}, this.optionsTemplate, this.options));\r\n        }\r\n    };\r\n    CurrencyMaskDirective.prototype.ngOnInit = function () {\r\n        this.inputHandler = new input_handler_1.InputHandler(this.elementRef.nativeElement, Object.assign({}, this.optionsTemplate, this.options));\r\n    };\r\n    CurrencyMaskDirective.prototype.handleBlur = function (event) {\r\n        this.inputHandler.getOnModelTouched().apply(event);\r\n    };\r\n    CurrencyMaskDirective.prototype.handleCut = function (event) {\r\n        if (!this.isChromeAndroid()) {\r\n            this.inputHandler.handleCut(event);\r\n        }\r\n    };\r\n    CurrencyMaskDirective.prototype.handleInput = function (event) {\r\n        if (this.isChromeAndroid()) {\r\n            this.inputHandler.handleInput(event);\r\n        }\r\n    };\r\n    CurrencyMaskDirective.prototype.handleKeydown = function (event) {\r\n        if (!this.isChromeAndroid()) {\r\n            this.inputHandler.handleKeydown(event);\r\n        }\r\n    };\r\n    CurrencyMaskDirective.prototype.handleKeypress = function (event) {\r\n        if (!this.isChromeAndroid()) {\r\n            this.inputHandler.handleKeypress(event);\r\n        }\r\n    };\r\n    CurrencyMaskDirective.prototype.handlePaste = function (event) {\r\n        if (!this.isChromeAndroid()) {\r\n            this.inputHandler.handlePaste(event);\r\n        }\r\n    };\r\n    CurrencyMaskDirective.prototype.isChromeAndroid = function () {\r\n        return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\r\n    };\r\n    CurrencyMaskDirective.prototype.registerOnChange = function (callbackFunction) {\r\n        this.inputHandler.setOnModelChange(callbackFunction);\r\n    };\r\n    CurrencyMaskDirective.prototype.registerOnTouched = function (callbackFunction) {\r\n        this.inputHandler.setOnModelTouched(callbackFunction);\r\n    };\r\n    CurrencyMaskDirective.prototype.setDisabledState = function (value) {\r\n        this.elementRef.nativeElement.disabled = value;\r\n    };\r\n    CurrencyMaskDirective.prototype.writeValue = function (value) {\r\n        this.inputHandler.setValue(value);\r\n    };\r\n    return CurrencyMaskDirective;\r\n}());\r\nCurrencyMaskDirective.decorators = [\r\n    { type: core_1.Directive, args: [{\r\n                selector: \"[currencyMask]\",\r\n                providers: [exports.CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nCurrencyMaskDirective.ctorParameters = function () { return [\r\n    { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [currency_mask_config_1.CURRENCY_MASK_CONFIG,] },] },\r\n    { type: core_1.ElementRef, },\r\n    { type: core_1.KeyValueDiffers, },\r\n]; };\r\nCurrencyMaskDirective.propDecorators = {\r\n    'options': [{ type: core_1.Input },],\r\n    'handleBlur': [{ type: core_1.HostListener, args: [\"blur\", [\"$event\"],] },],\r\n    'handleCut': [{ type: core_1.HostListener, args: [\"cut\", [\"$event\"],] },],\r\n    'handleInput': [{ type: core_1.HostListener, args: [\"input\", [\"$event\"],] },],\r\n    'handleKeydown': [{ type: core_1.HostListener, args: [\"keydown\", [\"$event\"],] },],\r\n    'handleKeypress': [{ type: core_1.HostListener, args: [\"keypress\", [\"$event\"],] },],\r\n    'handlePaste': [{ type: core_1.HostListener, args: [\"paste\", [\"$event\"],] },],\r\n};\r\nexports.CurrencyMaskDirective = CurrencyMaskDirective;\r\n//# sourceMappingURL=currency-mask.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/currency-mask.directive.js\n// module id = ../../../../ng2-currency-mask/src/currency-mask.directive.js\n// module chunks = masking.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"@angular/common\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar currency_mask_directive_1 = require(\"./currency-mask.directive\");\r\nvar CurrencyMaskModule = (function () {\r\n    function CurrencyMaskModule() {\r\n    }\r\n    return CurrencyMaskModule;\r\n}());\r\nCurrencyMaskModule.decorators = [\r\n    { type: core_1.NgModule, args: [{\r\n                imports: [\r\n                    common_1.CommonModule,\r\n                    forms_1.FormsModule\r\n                ],\r\n                declarations: [\r\n                    currency_mask_directive_1.CurrencyMaskDirective\r\n                ],\r\n                exports: [\r\n                    currency_mask_directive_1.CurrencyMaskDirective\r\n                ]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nCurrencyMaskModule.ctorParameters = function () { return []; };\r\nexports.CurrencyMaskModule = CurrencyMaskModule;\r\n//# sourceMappingURL=currency-mask.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/currency-mask.module.js\n// module id = ../../../../ng2-currency-mask/src/currency-mask.module.js\n// module chunks = masking.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar input_service_1 = require(\"./input.service\");\r\nvar InputHandler = (function () {\r\n    function InputHandler(htmlInputElement, options) {\r\n        this.inputService = new input_service_1.InputService(htmlInputElement, options);\r\n    }\r\n    InputHandler.prototype.handleCut = function (event) {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.inputService.updateFieldValue();\r\n            _this.setValue(_this.inputService.value);\r\n            _this.onModelChange(_this.inputService.value);\r\n        }, 0);\r\n    };\r\n    InputHandler.prototype.handleInput = function (event) {\r\n        var keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);\r\n        var rawValueLength = this.inputService.rawValue.length;\r\n        var rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\r\n        var storedRawValueLength = this.inputService.storedRawValue.length;\r\n        this.inputService.rawValue = this.inputService.storedRawValue;\r\n        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {\r\n            this.setCursorPosition(event);\r\n            return;\r\n        }\r\n        if (rawValueLength < storedRawValueLength) {\r\n            this.inputService.removeNumber(8);\r\n        }\r\n        if (rawValueLength > storedRawValueLength) {\r\n            switch (keyCode) {\r\n                case 43:\r\n                    this.inputService.changeToPositive();\r\n                    break;\r\n                case 45:\r\n                    this.inputService.changeToNegative();\r\n                    break;\r\n                default:\r\n                    if (!this.inputService.canInputMoreNumbers) {\r\n                        return;\r\n                    }\r\n                    this.inputService.addNumber(keyCode);\r\n            }\r\n        }\r\n        this.setCursorPosition(event);\r\n        this.onModelChange(this.inputService.value);\r\n    };\r\n    InputHandler.prototype.handleKeydown = function (event) {\r\n        var keyCode = event.which || event.charCode || event.keyCode;\r\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\r\n            event.preventDefault();\r\n            var selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\r\n            if (selectionRangeLength == 0) {\r\n                this.inputService.removeNumber(keyCode);\r\n                this.onModelChange(this.inputService.value);\r\n            }\r\n            if (selectionRangeLength == this.inputService.rawValue.length) {\r\n                this.setValue(0);\r\n                this.onModelChange(this.inputService.value);\r\n            }\r\n        }\r\n    };\r\n    InputHandler.prototype.handleKeypress = function (event) {\r\n        var keyCode = event.which || event.charCode || event.keyCode;\r\n        switch (keyCode) {\r\n            case undefined:\r\n            case 9:\r\n            case 13:\r\n                return;\r\n            case 43:\r\n                this.inputService.changeToPositive();\r\n                break;\r\n            case 45:\r\n                this.inputService.changeToNegative();\r\n                break;\r\n            default:\r\n                if (this.inputService.canInputMoreNumbers) {\r\n                    var selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\r\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\r\n                        this.setValue(0);\r\n                    }\r\n                    this.inputService.addNumber(keyCode);\r\n                }\r\n        }\r\n        event.preventDefault();\r\n        this.onModelChange(this.inputService.value);\r\n    };\r\n    InputHandler.prototype.handlePaste = function (event) {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.inputService.updateFieldValue();\r\n            _this.setValue(_this.inputService.value);\r\n            _this.onModelChange(_this.inputService.value);\r\n        }, 1);\r\n    };\r\n    InputHandler.prototype.updateOptions = function (options) {\r\n        this.inputService.updateOptions(options);\r\n    };\r\n    InputHandler.prototype.getOnModelChange = function () {\r\n        return this.onModelChange;\r\n    };\r\n    InputHandler.prototype.setOnModelChange = function (callbackFunction) {\r\n        this.onModelChange = callbackFunction;\r\n    };\r\n    InputHandler.prototype.getOnModelTouched = function () {\r\n        return this.onModelTouched;\r\n    };\r\n    InputHandler.prototype.setOnModelTouched = function (callbackFunction) {\r\n        this.onModelTouched = callbackFunction;\r\n    };\r\n    InputHandler.prototype.setValue = function (value) {\r\n        this.inputService.value = value;\r\n    };\r\n    InputHandler.prototype.setCursorPosition = function (event) {\r\n        setTimeout(function () {\r\n            event.target.setSelectionRange(event.target.value.length, event.target.value.length);\r\n        }, 0);\r\n    };\r\n    return InputHandler;\r\n}());\r\nexports.InputHandler = InputHandler;\r\n//# sourceMappingURL=input.handler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/input.handler.js\n// module id = ../../../../ng2-currency-mask/src/input.handler.js\n// module chunks = masking.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar InputManager = (function () {\r\n    function InputManager(htmlInputElement) {\r\n        this.htmlInputElement = htmlInputElement;\r\n    }\r\n    InputManager.prototype.setCursorAt = function (position) {\r\n        if (this.htmlInputElement.setSelectionRange) {\r\n            this.htmlInputElement.focus();\r\n            this.htmlInputElement.setSelectionRange(position, position);\r\n        }\r\n        else if (this.htmlInputElement.createTextRange) {\r\n            var textRange = this.htmlInputElement.createTextRange();\r\n            textRange.collapse(true);\r\n            textRange.moveEnd(\"character\", position);\r\n            textRange.moveStart(\"character\", position);\r\n            textRange.select();\r\n        }\r\n    };\r\n    InputManager.prototype.updateValueAndCursor = function (newRawValue, oldLength, selectionStart) {\r\n        this.rawValue = newRawValue;\r\n        var newLength = newRawValue.length;\r\n        selectionStart = selectionStart - (oldLength - newLength);\r\n        this.setCursorAt(selectionStart);\r\n    };\r\n    Object.defineProperty(InputManager.prototype, \"canInputMoreNumbers\", {\r\n        get: function () {\r\n            var haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\r\n            var selectionStart = this.inputSelection.selectionStart;\r\n            var selectionEnd = this.inputSelection.selectionEnd;\r\n            var haveNumberSelected = (selectionStart != selectionEnd && this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/\\d/)) ? true : false;\r\n            var startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\r\n            return haventReachedMaxLength || haveNumberSelected || startWithZero;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputManager.prototype, \"inputSelection\", {\r\n        get: function () {\r\n            var selectionStart = 0;\r\n            var selectionEnd = 0;\r\n            if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\r\n                selectionStart = this.htmlInputElement.selectionStart;\r\n                selectionEnd = this.htmlInputElement.selectionEnd;\r\n            }\r\n            else {\r\n                var range = document.selection.createRange();\r\n                if (range && range.parentElement() == this.htmlInputElement) {\r\n                    var lenght = this.htmlInputElement.value.length;\r\n                    var normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\r\n                    var startRange = this.htmlInputElement.createTextRange();\r\n                    startRange.moveToBookmark(range.getBookmark());\r\n                    var endRange = this.htmlInputElement.createTextRange();\r\n                    endRange.collapse(false);\r\n                    if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\r\n                        selectionStart = selectionEnd = lenght;\r\n                    }\r\n                    else {\r\n                        selectionStart = -startRange.moveStart(\"character\", -lenght);\r\n                        selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\r\n                        if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\r\n                            selectionEnd = lenght;\r\n                        }\r\n                        else {\r\n                            selectionEnd = -startRange.moveEnd(\"character\", -lenght);\r\n                            selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                selectionStart: selectionStart,\r\n                selectionEnd: selectionEnd\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputManager.prototype, \"rawValue\", {\r\n        get: function () {\r\n            return this.htmlInputElement && this.htmlInputElement.value;\r\n        },\r\n        set: function (value) {\r\n            this._storedRawValue = value;\r\n            if (this.htmlInputElement) {\r\n                this.htmlInputElement.value = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputManager.prototype, \"storedRawValue\", {\r\n        get: function () {\r\n            return this._storedRawValue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InputManager;\r\n}());\r\nexports.InputManager = InputManager;\r\n//# sourceMappingURL=input.manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/input.manager.js\n// module id = ../../../../ng2-currency-mask/src/input.manager.js\n// module chunks = masking.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar input_manager_1 = require(\"./input.manager\");\r\nvar InputService = (function () {\r\n    function InputService(htmlInputElement, options) {\r\n        this.htmlInputElement = htmlInputElement;\r\n        this.options = options;\r\n        this.inputManager = new input_manager_1.InputManager(htmlInputElement);\r\n    }\r\n    InputService.prototype.addNumber = function (keyCode) {\r\n        if (!this.rawValue) {\r\n            this.rawValue = this.applyMask(false, \"0\");\r\n        }\r\n        var keyChar = String.fromCharCode(keyCode);\r\n        var selectionStart = this.inputSelection.selectionStart;\r\n        var selectionEnd = this.inputSelection.selectionEnd;\r\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\r\n        this.updateFieldValue(selectionStart + 1);\r\n    };\r\n    InputService.prototype.applyMask = function (isNumber, rawValue) {\r\n        var _a = this.options, allowNegative = _a.allowNegative, decimal = _a.decimal, precision = _a.precision, prefix = _a.prefix, suffix = _a.suffix, thousands = _a.thousands;\r\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\r\n        var onlyNumbers = rawValue.replace(/[^0-9]/g, \"\");\r\n        if (!onlyNumbers) {\r\n            return \"\";\r\n        }\r\n        var integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision).replace(/^0*/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands);\r\n        if (integerPart == \"\") {\r\n            integerPart = \"0\";\r\n        }\r\n        var newRawValue = integerPart;\r\n        var decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\r\n        if (precision > 0) {\r\n            newRawValue += decimal + decimalPart;\r\n        }\r\n        var isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\r\n        var operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\r\n        return operator + prefix + newRawValue + suffix;\r\n    };\r\n    InputService.prototype.clearMask = function (rawValue) {\r\n        var value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\r\n        if (this.options.thousands) {\r\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\r\n        }\r\n        if (this.options.decimal) {\r\n            value = value.replace(this.options.decimal, \".\");\r\n        }\r\n        return parseFloat(value);\r\n    };\r\n    InputService.prototype.changeToNegative = function () {\r\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\r\n            this.rawValue = \"-\" + this.rawValue;\r\n        }\r\n    };\r\n    InputService.prototype.changeToPositive = function () {\r\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\r\n    };\r\n    InputService.prototype.removeNumber = function (keyCode) {\r\n        var selectionEnd = this.inputSelection.selectionEnd;\r\n        var selectionStart = this.inputSelection.selectionStart;\r\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\r\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\r\n            selectionStart = this.rawValue.length - this.options.suffix.length;\r\n        }\r\n        selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\r\n        selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\r\n        this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\r\n        this.updateFieldValue(selectionStart);\r\n    };\r\n    InputService.prototype.updateFieldValue = function (selectionStart) {\r\n        var newRawValue = this.applyMask(false, this.rawValue || \"\");\r\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\r\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\r\n    };\r\n    InputService.prototype.updateOptions = function (options) {\r\n        var value = this.value;\r\n        this.options = options;\r\n        this.value = value;\r\n    };\r\n    Object.defineProperty(InputService.prototype, \"canInputMoreNumbers\", {\r\n        get: function () {\r\n            return this.inputManager.canInputMoreNumbers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"inputSelection\", {\r\n        get: function () {\r\n            return this.inputManager.inputSelection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"rawValue\", {\r\n        get: function () {\r\n            return this.inputManager.rawValue;\r\n        },\r\n        set: function (value) {\r\n            this.inputManager.rawValue = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"storedRawValue\", {\r\n        get: function () {\r\n            return this.inputManager.storedRawValue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"value\", {\r\n        get: function () {\r\n            return this.clearMask(this.rawValue);\r\n        },\r\n        set: function (value) {\r\n            this.rawValue = this.applyMask(true, \"\" + value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InputService;\r\n}());\r\nexports.InputService = InputService;\r\n//# sourceMappingURL=input.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/angular/4 feb till customer/angularconected/node_modules/ng2-currency-mask/src/input.service.js\n// module id = ../../../../ng2-currency-mask/src/input.service.js\n// module chunks = masking.module"],"sourceRoot":"webpack:///"}